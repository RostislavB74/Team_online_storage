# Generated by Django 5.1.5 on 2025-02-09 12:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Gemstone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('precious', 'Коштовний'), ('semi-precious', 'Напівкоштовний')], max_length=20)),
                ('origin_stone', models.CharField(choices=[('natural', 'Природній'), ('synthetic', 'Синтетичний')], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('level', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th')])),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Ювеліриний камінь',
                'verbose_name_plural': 'Ювелірне каміння',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('metal', 'Метал'), ('non-metal', 'Неметал')], max_length=20)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('metal', models.CharField(choices=[('gold', 'Золото'), ('silver', 'Срібло'), ('platinum', 'Платина')], max_length=50)),
                ('assay', models.CharField(blank=True, choices=[('G585', '585'), ('G750', '750'), ('S925', '925'), ('P950', '950')], max_length=20, null=True)),
                ('color', models.CharField(blank=True, choices=[('white', 'Білий'), ('yellow', 'Жовтий'), ('red', 'Червоний'), ('brown', 'Коричневий'), ('rhodium_plating', 'Родіювання'), ('black', 'Чорний'), ('blackening', 'Чорніння')], max_length=50, null=True)),
                ('article', models.CharField(blank=True, max_length=20, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Матеріал',
                'verbose_name_plural': 'Матеріали',
            },
        ),
        migrations.CreateModel(
            name='RingSizeConversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('circumference_mm', models.FloatField(unique=True)),
                ('diameter_mm', models.FloatField()),
                ('size_ua', models.CharField(max_length=10)),
                ('size_us', models.CharField(blank=True, max_length=10, null=True)),
                ('size_eu', models.CharField(blank=True, max_length=10, null=True)),
                ('size_uk', models.CharField(blank=True, max_length=10, null=True)),
                ('size_asia', models.CharField(blank=True, max_length=10, null=True)),
                ('size_other_eu', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Конвертація розмірів',
                'verbose_name_plural': 'Конвертер розмірів',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='product.category')),
            ],
            options={
                'verbose_name': 'Категорія виробу',
                'verbose_name_plural': 'Категорії виробів',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('ean_13', models.CharField(blank=True, max_length=13, null=True)),
                ('sku', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.CharField(blank=True, max_length=10, null=True)),
                ('circumference_mm', models.FloatField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('weight_material', models.FloatField(blank=True, null=True)),
                ('main_set_included', models.BooleanField(default=False)),
                ('desccription_gemstone_main', models.CharField(blank=True, max_length=255, null=True)),
                ('weight_gemstone_main', models.FloatField(blank=True, null=True)),
                ('set_included', models.BooleanField(default=False)),
                ('desccription_gemstone_second', models.CharField(blank=True, max_length=255, null=True)),
                ('weight_gemstone_second', models.FloatField(blank=True, null=True)),
                ('dimenstions', models.BooleanField(default=False)),
                ('width_mm', models.CharField(blank=True, max_length=255, null=True)),
                ('length_mm', models.FloatField(blank=True, null=True)),
                ('clasp_type', models.CharField(blank=True, max_length=255, null=True)),
                ('coating', models.BooleanField(default=False)),
                ('coating_material', models.CharField(blank=True, max_length=255, null=True)),
                ('description_coating', models.CharField(blank=True, max_length=255, null=True)),
                ('color_coating', models.CharField(blank=True, max_length=255, null=True)),
                ('gold_plates', models.BooleanField(default=False)),
                ('style', models.CharField(blank=True, max_length=255, null=True)),
                ('collection', models.CharField(blank=True, max_length=255, null=True)),
                ('year_collection', models.IntegerField(blank=True, null=True)),
                ('country_of_origin', models.CharField(blank=True, max_length=255, null=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qrcodes/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='product.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('gemstone_main', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_with_main_gem', to='product.gemstone')),
                ('gemstone_second', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_with_second_gem', to='product.gemstone')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.material')),
                ('material_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_with_material_set', to='product.material')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товари',
            },
        ),
        migrations.CreateModel(
            name='ProductCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='product_certificates/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='product.product')),
            ],
            options={
                'verbose_name': 'Сертифікат продукції',
                'verbose_name_plural': 'Сертифікати продукцій',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_sertificate',
            field=models.ManyToManyField(blank=True, related_name='product_certificates', to='product.productcertificate'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product')),
            ],
            options={
                'verbose_name': 'Фото продукції',
                'verbose_name_plural': 'Фото продукцій',
            },
        ),
    ]
